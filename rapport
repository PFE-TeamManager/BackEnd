Architecture de projet

Avec ce schéma le côté serveur ne fait que retourner de l’information qui est récupérée et affichée par le client. 
L’API côté serveur, n’a aucune responsabilité d’affichage sur le navigateur de l’utilisateur

JWT is generally used as a way of storing the user’s session off of the server , 
That way, your API can stay stateless.

I’ve found that cookies are the safer way to go. If you make your cookie http only, 
javascript will not be able to access it, meaning you would be safe against XSS attacks.

Base Donnée : 
 - Membre peut étre dans plusieurs Equipe par exemple: un chef de projet
 - Equipe peut avoir plusieurs Membres
 - La relation entre Mmebre et Equipe est ManyToMany, qui selon DOCTRINE peut etre representé 
par une table de jointure, ou des champs collections dans les deux tables.

In ManyToOne/OneToMany Relation : 
    1 - Owning Side is The Entity who has ManyToOne relationships
    2 - Inverse Side is The Entity who has OneToMany relationships

Mmember : 
   - Register Member ...........DONE
   - contrainte des dates ...........NOT YET
   - update ...........NOT YET
   - delete (deactivate) ...........NOT YET
Security :
- Authentication : 
   - LoginAuthenticator ...........DONE 
   - JwtAuthenticator ...........DONE
   - Send email of validation ...........NOT YET
   - change password ...........NOT YET
   - remember_me ???

Symfony framework PHP : ensemble des expertises des développeurs experimentés, comme : architecture initial 
du projet skeleton , design pattern organistation de projet

Doctrine ORM : intermédiaire entre les entités (Models) et la base donnée
